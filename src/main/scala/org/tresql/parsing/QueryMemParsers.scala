package org.tresql.parsing

trait QueryMemParsers extends QueryParsers with MemParsers {
  override def stringLiteral = parser2MemParser(super.stringLiteral)
  override def ident = parser2MemParser(super.ident)
  override def wholeNumber = parser2MemParser(super.wholeNumber)
  override def decimalNr = parser2MemParser(super.decimalNr)
  override def TRUE = parser2MemParser(super.TRUE)
  override def FALSE = parser2MemParser(super.FALSE)
  override def NULL = parser2MemParser(super.NULL)
  override def ALL = parser2MemParser(super.ALL)
  override def qualifiedIdent = parser2MemParser(super.qualifiedIdent)
  override def qualifiedIdentAll = parser2MemParser(super.qualifiedIdentAll)
  override def variable = parser2MemParser(super.variable)
  override def id = parser2MemParser(super.id)
  override def idref = parser2MemParser(super.idref)
  override def result = parser2MemParser(super.result)
  override def braces = parser2MemParser(super.braces)
  override def operand = parser2MemParser(super.operand)
  override def function = parser2MemParser(super.function)
  override def array = parser2MemParser(super.array)
  override def join = parser2MemParser(super.join)
  override def filter = parser2MemParser(super.filter)
  override def filters = parser2MemParser(super.filters)
  override def obj = parser2MemParser(super.obj)
  override def objs = parser2MemParser(super.objs)
  override def column = parser2MemParser(super.column)
  override def columns = parser2MemParser(super.columns)
  override def group = parser2MemParser(super.group)
  override def orderMember = parser2MemParser(super.orderMember)
  override def order = parser2MemParser(super.order)
  override def offsetLimit = parser2MemParser(super.offsetLimit)
  override def query = parser2MemParser(super.query)      
  override def queryWithCols = parser2MemParser(super.queryWithCols)
  override def insert = parser2MemParser(super.insert)
  override def update = parser2MemParser(super.update)
  override def delete = parser2MemParser(super.delete)
  override def unaryExpr = parser2MemParser(super.unaryExpr)
  override def mulDiv = parser2MemParser(super.mulDiv)
  override def plusMinus = parser2MemParser(super.plusMinus)
  override def comp = parser2MemParser(super.comp)
  override def in = parser2MemParser(super.in)
  override def logicalOp = parser2MemParser(super.logicalOp)
  override def expr = parser2MemParser(super.expr)
  override def exprList = parser2MemParser(super.exprList)
}