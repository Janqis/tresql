set JAVA_OPTS=-Djdbc.drivers=com.sap.dbtech.jdbc.DriverSapDB -Duniso.query.db=jdbc:sapdb://frida/donna -Duniso.query.user=xx -Duniso.query.password=xx

:cp bin
:cp class
:cp lib/sapdbc.jar

Class.forName("oracle.jdbc.OracleDriver");Class.forName("com.sap.dbtech.jdbc.DriverSapDB");Class.forName("org.postgresql.Driver")
import uniso.query._
import uniso.query.result._
val md = metadata.JDBCMetaData("burvis", "burfull2")
val conn = Conn()()

Env update md
Env update conn
Env update ((msg, level) => println (msg))

var s = """per_persona p[p.kla_pilsoniba_id pils, p.kla_valstiskas_piederibas_id valsts]kla_kodifikatora_ieraksts?[?, ?]
        {p.id, vards, uzvards, |mkString(per_auto_kategorija/kla_kodifikatora_ieraksts[per_persona_id = :1(1)]{kods}, "", ","),
         pils.kods, pils.nosaukums, valsts.kods, valsts.nosaukums}"""

Query("mkString(" + s + ")", 1326418,1326432)

val writer = new java.io.CharArrayWriter
Jsonizer.jsonize(Query(s, 1326418,1326432).asInstanceOf[Result], writer)
println(writer)

var s = """per_persona p[p.kla_pilsoniba_id pils, p.kla_valstiskas_piederibas_id valsts]kla_kodifikatora_ieraksts?[?, ?]
        {p.id, vards, uzvards, |mkString(per_auto_kategorija/kla_kodifikatora_ieraksts[per_persona_id = :1(1)]{kods,
         |mkString(per_persona p[kla_valsts_val_prasme_id]kla_kodifikatora_ieraksts[p.id = :2(1)]{kods}, "", ",")}, "", ","),
         pils.kods, pils.nosaukums, valsts.kods, valsts.nosaukums}"""

val expr = Query.build("mkString(" + s + ")")
expr(List(1326418,1326432))
expr.close

var s = """:id = id(dual{hibernate_sequence.nextval}),
  kla_filiale{id, kods, nosaukums} + [:id, "CNTRS", "Centra ofiss"],
  "(" + mkString(kla_filiale[:id]{id, kods, nosaukums}) + ")", 
  kla_filiale - [:id], mkString(kla_filiale[:id]{kods, nosaukums})"""
  
Query(s)

val expr = Query.build(s)
expr()
expr.close