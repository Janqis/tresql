// each line consists of statement to be tested. line format is following:
//<statement> --> [<semicolon separated bind params (array elements are comma separated)>] --> <result as returned from method uniso.query.result.Jsonizer.jsonize(..., Jsonizer.Arrays)>
//INSERT
//DEPTS
DEPT {DEPTNO, DNAME, LOC} + [10, "ACCOUNTING", "NEW YORK"], [20, "RESEARCH", "DALLAS"], [30, "SALES", "CHICAGO"], [40, "OPERATIONS", "BOSTON"] --> 4
//EMPS
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7839, "KING",   "PRESIDENT", null, "1981-11-17", 5000, null, 10] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7698, "BLAKE",  "MANAGER",   7839, "1981-05-01",  2850, null, 30] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7782, "CLARK",  "MANAGER",   7839, "1981-06-9", 2450, null, 10] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7566, "JONES",  "MANAGER",   7839, "1981-04-02",  2975, null, 20] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7499, "ALLEN",  "SALESMAN",  7698, "1981-02-20", 1600,  300, 30] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7521, "WARD",   "SALESMAN",  7698, "1981-02-22", 1250,  500, 30] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7654, "MARTIN", "SALESMAN",  7698, "1981-09-28", 1250, 1400, 30] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7844, "TURNER", "SALESMAN",  7698, "1981-09-8", 1500,    0, 30] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7900, "JAMES",  "CLERK",     7698, "1981-12-3", 950, null, 30] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7934, "MILLER", "CLERK",     7782, "1982-01-23", 1300, null, 10] --> 1
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [7788, "SCOTT",  "ANALYST", 7566, "1982-12-09", 3000, null, 20], [7902, "FORD", "ANALYST", 7566, "1981-12-3", 3000, null, 20], [7876, "ADAMS", "CLERK", 7788, "1983-01-12", 1100, null, 20] --> 3
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [?, ?, ?, ?, ?, ?, ?, ?] --> 7369; 'SMITH; 'CLERK; 7902; 1980-12-17; 800; null; 20 --> 1

//SALGRADES
SALGRADE {GRADE, HISAL, LOSAL} + [1, 700, 1200],[2, 1201, 1400],[3, 1401, 2000],[4, 2001, 3000],[5, 3001, 9999] --> 5

//WORK
WORK {WDATE, EMPNO, HOURS, EMPNO_MGR} + ["2012-06-06", 7839, 3, null], ["2012-06-07", 7839, 4, null], ["2012-06-06", 7788, 5, 7566], ["2012-06-07", 7788, 8, 7782] --> 4

//DUMMY
DUMMY {DUMMY} + [0] --> 1

//----SELECT----
dummy --> [[0]]

emp {count(*)} --> [[14]]
emp e/dept d [d.deptno = 20]{empno, ename, dname}#(empno) --> [[7369, "SMITH", "RESEARCH"], [7566, "JONES", "RESEARCH"], [7788, "SCOTT", "RESEARCH"], [7876, "ADAMS", "RESEARCH"], [7902, "FORD", "RESEARCH"]]
emp e[e.deptno d1, e.deptno d2]dept{d1.deptno, d2.deptno, e.empno}#(1,2,3) --> [[10, 10, 7782], [10, 10, 7839], [10, 10, 7934], [20, 20, 7369], [20, 20, 7566], [20, 20, 7788], [20, 20, 7876], [20, 20, 7902], [30, 30, 7499], [30, 30, 7521], [30, 30, 7654], [30, 30, 7698], [30, 30, 7844], [30, 30, 7900]]

//implicit search by primary key with named variable
dept[:id] {deptno} #(deptno) --> id=10 --> [[10]]
dept[:'id'] {deptno} #(deptno) --> id=10 --> [[10]]
dept[:"id"] {deptno} #(deptno) --> id=10 --> [[10]]

//join
emp e/dept[sal >= hisal & sal <= losal]salgrade {ename, dname, grade} #(empno) --> [["SMITH", "RESEARCH", 1], ["ALLEN", "SALES", 3], ["WARD", "SALES", 2], ["JONES", "RESEARCH", 4], ["MARTIN", "SALES", 2], ["BLAKE", "SALES", 4], ["CLARK", "ACCOUNTING", 4], ["SCOTT", "RESEARCH", 4], ["KING", "ACCOUNTING", 5], ["TURNER", "SALES", 3], ["ADAMS", "RESEARCH", 1], ["JAMES", "SALES", 1], ["FORD", "RESEARCH", 4], ["MILLER", "ACCOUNTING", 2]]
work[empno]emp/dept {wdate, ename, dname} #(1,2,3) --> [["2012-06-06", "KING", "ACCOUNTING"], ["2012-06-06", "SCOTT", "RESEARCH"], ["2012-06-07", "KING", "ACCOUNTING"], ["2012-06-07", "SCOTT", "RESEARCH"]]

//default join with additional expression
dept d/[job = 'PRESIDENT']emp? e {dname, ename}#(1, 2 null) --> [["ACCOUNTING", "KING"], ["OPERATIONS", null], ["RESEARCH", null], ["SALES", null]]
dept d[job = 'PRESIDENT']/emp? e {dname, ename}#(1, 2 null) --> [["ACCOUNTING", "KING"], ["OPERATIONS", null], ["RESEARCH", null], ["SALES", null]]
dept d/emp? e [job = 'PRESIDENT']{dname, ename}#(1, 2) --> [["ACCOUNTING", "KING"]]

//primary key join shortcut syntax
emp e[e.deptno d]dept {ename, dname} #(ename) --> [["ADAMS", "RESEARCH"], ["ALLEN", "SALES"], ["BLAKE", "SALES"], ["CLARK", "ACCOUNTING"], ["FORD", "RESEARCH"], ["JAMES", "SALES"], ["JONES", "RESEARCH"], ["KING", "ACCOUNTING"], ["MARTIN", "SALES"], ["MILLER", "ACCOUNTING"], ["SCOTT", "RESEARCH"], ["SMITH", "RESEARCH"], ["TURNER", "SALES"],["WARD", "SALES"]]
work w[w.empno e, w.empno_mgr m]emp {e.ename, m.ename, hours} #(1,2,3) --> [["SCOTT", "CLARK", 8], ["SCOTT", "JONES", 5]]

//alias join shortcut syntax
emp e[e.empno = w.empno]work w;e/dept [ename = 'SCOTT']{hours, ename, dname} #(hours) --> [[5, "SCOTT", "RESEARCH"], [8, "SCOTT", "RESEARCH"]]
work w[w.empno e, w.empno_mgr m]emp;e/dept d;m/dept md {e.ename, d.dname, hours, m.ename, md.dname} #(1,2,3) --> [["SCOTT", "RESEARCH", 5, "JONES", "RESEARCH"], ["SCOTT", "RESEARCH", 8, "CLARK", "ACCOUNTING"]]

//outer join
dept d/emp? e[e.deptno != null]#{d.deptno}#(deptno) --> [[10], [20], [30]]

//column aliases
emp{ename n}#(1) --> [["ADAMS"], ["ALLEN"], ["BLAKE"], ["CLARK"], ["FORD"], ["JAMES"], ["JONES"], ["KING"], ["MARTIN"], ["MILLER"], ["SCOTT"], ["SMITH"], ["TURNER"], ["WARD"]]
emp{ename 'n'}#(1) --> [["ADAMS"], ["ALLEN"], ["BLAKE"], ["CLARK"], ["FORD"], ["JAMES"], ["JONES"], ["KING"], ["MARTIN"], ["MILLER"], ["SCOTT"], ["SMITH"], ["TURNER"], ["WARD"]]
emp{ename "n"}#(1) --> [["ADAMS"], ["ALLEN"], ["BLAKE"], ["CLARK"], ["FORD"], ["JAMES"], ["JONES"], ["KING"], ["MARTIN"], ["MILLER"], ["SCOTT"], ["SMITH"], ["TURNER"], ["WARD"]]
emp{ename "select"}#(1) --> [["ADAMS"], ["ALLEN"], ["BLAKE"], ["CLARK"], ["FORD"], ["JAMES"], ["JONES"], ["KING"], ["MARTIN"], ["MILLER"], ["SCOTT"], ["SMITH"], ["TURNER"], ["WARD"]]
emp{ename 'select'}#(1) --> [["ADAMS"], ["ALLEN"], ["BLAKE"], ["CLARK"], ["FORD"], ["JAMES"], ["JONES"], ["KING"], ["MARTIN"], ["MILLER"], ["SCOTT"], ["SMITH"], ["TURNER"], ["WARD"]]

//select in column clause
emp[ename ~~ ?]{ename, (dept[?]{dname}) dname, (dept[?]{dname}) dname1} --> 'KIN%; 10; 20 --> [["KING", "ACCOUNTING", "RESEARCH"]]

//order
dept/emp[sal >= hisal & sal <= losal]salgrade {deptno, grade, empno, sal}#(deptno, grade)~#(sal) --> [[10, 2, 7934, 1300.00], [10, 4, 7782, 2450.00], [10, 5, 7839, 5000.00], [20, 1, 7876, 1100.00], [20, 1, 7369, 800.00], [20, 4, 7788, 3000.00], [20, 4, 7902, 3000.00], [20, 4, 7566, 2975.00], [30, 1, 7900, 950.00], [30, 2, 7521, 1250.00], [30, 2, 7654, 1250.00], [30, 3, 7499, 1600.00], [30, 3, 7844, 1500.00], [30, 4, 7698, 2850.00]]
dept/emp[sal >= hisal & sal <= losal]salgrade {deptno, grade, empno, sal}#(null deptno, grade)~#(sal, 3 null) --> [[10, 2, 7934, 1300.00], [10, 4, 7782, 2450.00], [10, 5, 7839, 5000.00], [20, 1, 7369, 800.00], [20, 1, 7876, 1100.00], [20, 4, 7566, 2975.00], [20, 4, 7902, 3000.00], [20, 4, 7788, 3000.00], [30, 1, 7900, 950.00], [30, 2, 7654, 1250.00], [30, 2, 7521, 1250.00], [30, 3, 7844, 1500.00], [30, 3, 7499, 1600.00], [30, 4, 7698, 2850.00]]

//in operator
//NOTE: List of arguments if more than 1 value must be in square brackets
dept[deptno in(10)]{deptno}#(1) --> [[10]] 
dept[deptno in[10, 20]]{deptno}#(1) --> [[10], [20]]

//in subselect
dept [deptno in (emp{deptno})]#(deptno) --> [[10, "ACCOUNTING", "NEW YORK"], [20, "RESEARCH", "DALLAS"], [30, "SALES", "CHICAGO"]]
dept [deptno in (emp[ename ~~ ?]{deptno}) | deptno = 40]#(deptno) --> 'KIN% --> [[10, "ACCOUNTING", "NEW YORK"], [40, "OPERATIONS", "BOSTON"]]

//exists correlated subselect
dept d[(emp e[e.deptno = d.deptno])]#(deptno) --> [[10, "ACCOUNTING", "NEW YORK"], [20, "RESEARCH", "DALLAS"], [30, "SALES", "CHICAGO"]]

//from clause select
dept[deptno in (/(dept[:id]){deptno})]{deptno}#(1) --> id=10 --> [[10]]

//array binding
emp [empno in(?)]{empno, ename, job}#(empno) --> [7839, 7782] --> [[7782, "CLARK", "MANAGER"], [7839, "KING", "PRESIDENT"]]
emp [ename ~~ ? & empno in(?) & mgr = null & sal = ?]{empno, ename, job} --> 'kin%; [7839, 7782]; 5000  --> [[7839, "KING", "PRESIDENT"]]

//named variables
dept[dname ~~ :name] --> name='acc% --> [[10, "ACCOUNTING", "NEW YORK"]]

//mixed mode - named indexed variables
dept[deptno = ? & dname ~~ :name] --> name='acc%;10 --> [[10, "ACCOUNTING", "NEW YORK"]]

//in subselect with binding
dept[deptno in (emp[sal >= ?]{deptno})] {dname} --> 5000 --> [["ACCOUNTING"]]
dept d[d.deptno in (emp e[e.deptno in (dept d1[:id?]{d1.deptno})]{e.deptno})]{deptno}#(deptno) --> id=10 --> [[10]]

//group by, having
emp[sal >= hisal & sal <= losal]salgrade {grade, hisal, losal, count(empno)} (grade, hisal, losal) #(1) --> [[1, 700, 1200, 3], [2, 1201, 1400, 3], [3, 1401, 2000, 2], [4, 2001, 3000, 5], [5, 3001, 9999, 1]]
emp[sal >= hisal & sal <= losal]salgrade {grade, hisal, losal, count(*)} (grade, hisal, losal)^(count(*) > ?)#(1) --> 1 --> [[1, 700, 1200, 3], [2, 1201, 1400, 3], [3, 1401, 2000, 2], [4, 2001, 3000, 5]] 

//two level query: salgrade -> emp
salgrade[?] {grade, hisal, losal, |emp[sal >= :1(2) & sal <= :1(3)]{ename, sal}} --> 5 --> [[5, 3001, 9999, [["KING", 5000.00]]]]
salgrade[?] {grade, hisal, losal lo, |emp[sal >= :1('hisal') & sal <= :1('lo')]{ename, sal}} --> 5 --> [[5, 3001, 9999, [["KING", 5000.00]]]]
salgrade[?] {grade, hisal hi, losal, |emp[sal >= :1(hi) & sal <= :1(losal)]{ename, sal}} --> 5 --> [[5, 3001, 9999, [["KING", 5000.00]]]]

//three level query: dept -> salgrade -> emp
dept{deptno, dname, |emp[sal >= hisal & sal <= losal]salgrade[deptno = :1(1)] {grade, hisal, losal, count(empno) empcount, |emp/dept[sal >= :1(2) & sal <= :1(3) & emp.deptno = :2(1)]{ename, emp.deptno, dname, sal}#(empno) emps} (grade, hisal, losal) #(1) salgrades}#(deptno) --> [[10, "ACCOUNTING", [[2, 1201, 1400, 1, [["MILLER", 10, "ACCOUNTING", 1300.00]]], [4, 2001, 3000, 1, [["CLARK", 10, "ACCOUNTING", 2450.00]]], [5, 3001, 9999, 1, [["KING", 10, "ACCOUNTING", 5000.00]]]]], [20, "RESEARCH", [[1, 700, 1200, 2, [["SMITH", 20, "RESEARCH", 800.00], ["ADAMS", 20, "RESEARCH", 1100.00]]], [4, 2001, 3000, 3, [["JONES", 20, "RESEARCH", 2975.00], ["SCOTT", 20, "RESEARCH", 3000.00], ["FORD", 20, "RESEARCH", 3000.00]]]]], [30, "SALES", [[1, 700, 1200, 1, [["JAMES", 30, "SALES", 950.00]]], [2, 1201, 1400, 2, [["WARD", 30, "SALES", 1250.00], ["MARTIN", 30, "SALES", 1250.00]]], [3, 1401, 2000, 2, [["ALLEN", 30, "SALES", 1600.00], ["TURNER", 30, "SALES", 1500.00]]], [4, 2001, 3000, 1, [["BLAKE", 30, "SALES", 2850.00]]]]], [40, "OPERATIONS", []]]

//two level query, child query in the midst of parent query columns
dept[?]{loc, deptno, |emp[deptno = :1(2)] {job}, dname} --> 10 --> [["NEW YORK", 10, [["PRESIDENT"], ["MANAGER"], ["CLERK"]], "ACCOUNTING"]]

//union
dept[?]{deptno} ++ emp[?]{empno} ++ salgrade[?]{grade} --> 10;7839;1 --> [[10], [7839], [1]]
/(dept{deptno} + salgrade{grade}) ~#(1) --> [[40], [30], [20], [10], [5], [4], [3], [2], [1]]

//intersect
dept{deptno} && emp{empno} --> []
dept d[d.deptno = d1.deptno](dept{deptno} && emp[sal >= ?]{deptno}) d1 {deptno, dname} --> 5000 --> [[10, "ACCOUNTING"]]

//except
dept{deptno} - dept/emp?[ename != null]{deptno} --> [[40]]

//product, multiple col sorting
dept[]salgrade{dname, grade}#(1,loc)~#(2) --> [["ACCOUNTING", 5], ["ACCOUNTING", 4], ["ACCOUNTING", 3], ["ACCOUNTING", 2], ["ACCOUNTING", 1], ["OPERATIONS", 5], ["OPERATIONS", 4], ["OPERATIONS", 3], ["OPERATIONS", 2], ["OPERATIONS", 1], ["RESEARCH", 5], ["RESEARCH", 4], ["RESEARCH", 3], ["RESEARCH", 2], ["RESEARCH", 1], ["SALES", 5], ["SALES", 4], ["SALES", 3], ["SALES", 2], ["SALES", 1]]
dept[]salgrade[]dummy{dname, grade, dummy}#(1,loc)~#(2) --> [["ACCOUNTING", 5, 0], ["ACCOUNTING", 4, 0], ["ACCOUNTING", 3, 0], ["ACCOUNTING", 2, 0], ["ACCOUNTING", 1, 0], ["OPERATIONS", 5, 0], ["OPERATIONS", 4, 0], ["OPERATIONS", 3, 0], ["OPERATIONS", 2, 0], ["OPERATIONS", 1, 0], ["RESEARCH", 5, 0], ["RESEARCH", 4, 0], ["RESEARCH", 3, 0], ["RESEARCH", 2, 0], ["RESEARCH", 1, 0], ["SALES", 5, 0], ["SALES", 4, 0], ["SALES", 3, 0], ["SALES", 2, 0], ["SALES", 1, 0]]

//all cols: *
dept[10]{*} --> [[10, "ACCOUNTING", "NEW YORK"]]
dept[10]{*, |emp[deptno = :1(1)]{ename}} --> [[10, "ACCOUNTING", "NEW YORK", [["KING"], ["CLARK"], ["MILLER"]]]]
dept[?]{|emp[?]{ename}, *} --> 10;7839 --> [[[["KING"]], 10, "ACCOUNTING", "NEW YORK"]]

//all cols from one table
dept/emp[10] {deptno, dname, emp.*, |emp[deptno = :1(deptno)]{ename}#(ename)}#(empno) --> [[10, "ACCOUNTING", 7782, "CLARK", "MANAGER", 7839, "1981-06-09", 2450.00, null, 10, [["CLARK"], ["KING"], ["MILLER"]]], [10, "ACCOUNTING", 7839, "KING", "PRESIDENT", null, "1981-11-17", 5000.00, null, 10, [["CLARK"], ["KING"], ["MILLER"]]], [10, "ACCOUNTING", 7934, "MILLER", "CLERK", 7782, "1982-01-23", 1300.00, null, 10, [["CLARK"], ["KING"], ["MILLER"]]]]
//NOTE: child query allways stays last in result when all cols from one table is used 
dept/emp[10] {|emp[deptno = :1(deptno)]{ename}#(ename), deptno, dname, emp.*}#(empno) --> [[10, "ACCOUNTING", 7782, "CLARK", "MANAGER", 7839, "1981-06-09", 2450.00, null, 10, [["CLARK"], ["KING"], ["MILLER"]]], [10, "ACCOUNTING", 7839, "KING", "PRESIDENT", null, "1981-11-17", 5000.00, null, 10, [["CLARK"], ["KING"], ["MILLER"]]], [10, "ACCOUNTING", 7934, "MILLER", "CLERK", 7782, "1982-01-23", 1300.00, null, 10, [["CLARK"], ["KING"], ["MILLER"]]]]

//limit offset
dept#(deptno)@(1 2) --> [[20, "RESEARCH", "DALLAS"], [30, "SALES", "CHICAGO"]]
dept#(deptno)@(? ?) --> 2;3 --> [[30, "SALES", "CHICAGO"], [40, "OPERATIONS", "BOSTON"]]
dept#(deptno)@(1) --> [[10, "ACCOUNTING", "NEW YORK"]]

//single quoted string
dept[dname ~ 'ACC%'] --> [[10, "ACCOUNTING", "NEW YORK"]]

//optional binding
dept[deptno = :id?] {deptno} #(deptno) --> [[10], [20], [30], [40]]
dept[:id?] {deptno} #(deptno) --> id=10 --> [[10]]
dept[:id?] {deptno} #(deptno) --> [[10], [20], [30], [40]]
dept[:id? & dname ~~ :name? & loc ~~ :loc?] --> loc = 'bost% --> [[40, "OPERATIONS", "BOSTON"]]
dept[(:id? & (dname ~~ :name? & (loc ~~ :loc?)))] --> loc = 'bost% --> [[40, "OPERATIONS", "BOSTON"]]
dept [deptno in (emp[ename ~~ :n?]{deptno})]{deptno}#(deptno) --> [[10], [20], [30], [40]]
dept [deptno in (emp[ename ~~ :n?]{deptno}) | deptno = 40]#(deptno) --> [[40, "OPERATIONS", "BOSTON"]]
dept [deptno in (emp[ename ~~ :n?]{deptno}) | deptno = 40 | deptno in (emp{deptno})]{deptno}#(deptno) --> [[10], [20], [30], [40]]
dept [deptno in (emp[ename ~~ :n?]{deptno})]{deptno}#(deptno),dept [deptno in (emp{deptno})]{deptno}#(deptno) --> [[[10], [20], [30], [40]], [[10], [20], [30]]]
dept d[d.deptno in (emp e[e.deptno in (dept d1[:id?]{d1.deptno})]{e.deptno})]{deptno}#(deptno) --> [[10], [20], [30], [40]]
dept d[d.deptno in (emp e[e.deptno in (dept d1[:id?]{d1.deptno})]{e.deptno}) & d.deptno in (emp e{e.deptno})]{deptno}#(deptno) --> [[10], [20], [30]]
dept[deptno in (/(dept[:id?]{deptno}){deptno})]{deptno}#(1) --> [[10], [20], [30], [40]]
dept[deptno in (/(salgrade[:id?]{grade} + dept[:id?]{deptno}){*})]{deptno}#(1) --> [[10], [20], [30], [40]]
dept[deptno in (/(salgrade[:id?]{grade} + dept[10]{deptno}){*})]{deptno}#(1) --> [[10]]
dept[deptno in (emp/dept[dname ~~ :n?]{deptno})]{deptno}#(1) --> [[10], [20], [30], [40]]
dept[deptno in (emp/dept[dname ~~ :n?]{deptno})]{deptno}#(1) --> n='acc% --> [[10]]
dept[10 & dname ~upper(:n?)] {dname} --> [["ACCOUNTING"]]
dept[10 & dname ~upper(lower(:n?))] {dname} --> [["ACCOUNTING"]]
  //offset limit optional binding
dept{deptno}#(deptno)@(:o? :l?) --> [[10], [20], [30], [40]]
dept{deptno}#(deptno)@(:o? :l?) --> o=3 --> [[40]]
dept{deptno}#(deptno)@(:o? :l?) --> l=1 --> [[10]]

//distinct
/(dept{deptno} ++ dept{deptno})#{deptno}#(1) --> [[10], [20], [30], [40]]


//----UPDATE----
emp[hiredate >= ? & hiredate <= ?]{sal} = [sal + ?] --> '1982-01-23;'1982-12-09;1000.35 --> 2
emp[hiredate >= ? & hiredate <= ?]{sal} ~#(1) --> '1982-01-23;'1982-12-09 --> [[4000.35], [2300.35]]
emp[?] {ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} = [?, ?, ?, ?, ?, ?, ?] --> 7876; null; null; null; null; null; null; null --> 1
emp[7876] --> [[7876, null, null, null, null, null, null, null]]
emp[:id]{ename} = [:n] --> id=7876;n='kuku --> 1
emp[7876] {ename} --> [["kuku"]]

//----DELETE----
salgrade - [?] --> 5 --> 1
dummy - [], DUMMY {DUMMY} + [0], -dummy[], DUMMY {DUMMY} + [0] --> [1, 1, 1, 1]

//--ASSIGN EXPR
:v = 5, :s = "kuku" --> [5, "kuku"]

//----BATCH----
SALGRADE {GRADE, HISAL, LOSAL} + [?, ?, ?], emp[?] {ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} = [?, ?, ?, ?, ?, ?, ?], emp[?] --> 6; 10000; 11000; 7876; 'ADAMS;  'CLERK; 7788; '1983-01-12; 1100; null; 20; 7788 --> [1, 1, [[7788, "SCOTT", "ANALYST", 7566, "1982-12-09", 4000.35, null, 20]]]
//two unions in batch
salgrade[?] {grade} + dummy, "A" + " " + "B", dept[dname ~~ ?]{deptno} + dummy, 1 + 3 --> -1; 'kuku% --> [[[0]], "A B", [[0]], 4]
//merging of two results with variables
:r1 = /(dept[dname ~~ ?]{deptno} + dummy)#(1), :r2 = salgrade[?] {grade} + dummy, :r1 | :r2 --> 'acc%; -1 --> [[], [], [[0, 0], [10]]]

//----Scala and DB PROCEDURE CALL
inc_val_5(5) --> [[10]]
inc_val_5(?) --> 10 --> [[15]]
mkString(emp{ename}#(ename), " ", ",") --> ADAMS,ALLEN,BLAKE,CLARK,FORD,JAMES,JONES,KING,MARTIN,MILLER,SCOTT,SMITH,TURNER,WARD

//sequence test
nextval("seq") --> [[10000]]

//----insensitive comparison function test using dialect----
EMP {EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO} + [9999, "MĀRTIŅŠ ŽVŪKŠĶIS",  "CLERK", 7788, "1983-01-12", 1100, null, 20] --> 1
emp[cmp_i(ename, ?)]{ename} --> 'zvuksk --> [["MĀRTIŅŠ ŽVŪKŠĶIS"]]
emp[cmp_i_any(ename, ?)]{ename} --> 'zvuksk --> [["MĀRTIŅŠ ŽVŪKŠĶIS"]]
emp[cmp_i_start(ename, ?)]{ename} --> 'mar --> [["MARTIN"], ["MĀRTIŅŠ ŽVŪKŠĶIS"]]
emp[cmp_i_end(ename, ?)]{ename} --> 'kskis --> [["MĀRTIŅŠ ŽVŪKŠĶIS"]]
emp[cmp_i(ename, ?)]{ename} --> 'ZVUKSK --> [["MĀRTIŅŠ ŽVŪKŠĶIS"]]
emp[cmp_i_start(ename, ?)]{ename} --> 'MĀR --> [["MĀRTIŅŠ ŽVŪKŠĶIS"]]
emp[cmp_i_start(ename, ?)]{ename} --> 'mār --> [["MĀRTIŅŠ ŽVŪKŠĶIS"]]
emp[cmp_i_exact(ename, ?)]{ename} --> 'martins zvukskis --> [["MĀRTIŅŠ ŽVŪKŠĶIS"]]
emp[cmp_i(ename, ?)]{ename} --> null --> []